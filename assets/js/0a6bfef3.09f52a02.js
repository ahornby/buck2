"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[55380],{28453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>o});var t=s(96540);const r={},i=t.createContext(r);function l(e){const n=t.useContext(i);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),t.createElement(i.Provider,{value:n},e.children)}},71152:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>l,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"prelude/rules/python/python_library","title":"python_library","description":"A python_library() rule is used to group together Python source files and resources to be passed together in as a dep of other rules.","source":"@site/../docs/prelude/rules/python/python_library.md","sourceDirName":"prelude/rules/python","slug":"/prelude/rules/python/python_library","permalink":"/docs/prelude/rules/python/python_library","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"ruleSidebar","previous":{"title":"python_bootstrap_library","permalink":"/docs/prelude/rules/python/python_bootstrap_library"},"next":{"title":"python_needed_coverage_test","permalink":"/docs/prelude/rules/python/python_needed_coverage_test"}}');var r=s(74848),i=s(28453);s(56289);const l={},o="python_library",c={},d=[{value:"Function Signature",id:"function-signature",level:3},{value:"Parameters",id:"parameters",level:3},{value:"Examples",id:"examples",level:3}];function a(e){const n={code:"code",em:"em",h1:"h1",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"python_library",children:"python_library"})}),"\n",(0,r.jsxs)(n.p,{children:["A ",(0,r.jsx)(n.code,{children:"python_library()"})," rule is used to group together Python source files and resources to be passed together in as a ",(0,r.jsx)(n.code,{children:"dep"})," of other rules."]}),"\n",(0,r.jsx)(n.h3,{id:"function-signature",children:"Function Signature"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'def python_library(\n    *,\n    name: str,\n    default_target_platform: None | str = None,\n    target_compatible_with: list[str] = [],\n    compatible_with: list[str] = [],\n    exec_compatible_with: list[str] = [],\n    visibility: list[str] = [],\n    within_view: list[str] = ["PUBLIC"],\n    metadata: OpaqueMetadata = {},\n    tests: list[str] = [],\n    modifiers: OpaqueMetadata = [],\n    _apple_platforms: dict[str, str] = {},\n    _create_manifest_for_source_dir: str = "prelude//python/tools:create_manifest_for_source_dir",\n    _create_third_party_build_root: str = "prelude//third-party/tools:create_build",\n    _cxx_toolchain: str = "gh_facebook_buck2_shims_meta//:cxx",\n    _python_internal_tools: str = "prelude//python/tools:python_internal_tools",\n    _python_toolchain: str = "gh_facebook_buck2_shims_meta//:python",\n    base_module: None | str = None,\n    contacts: list[str] = [],\n    default_host_platform: None | str = None,\n    deps: list[str] = [],\n    exclude_deps_from_merged_linking: bool = False,\n    ignore_compile_errors: bool = False,\n    labels: list[str] = [],\n    licenses: list[str] = [],\n    platform_deps: list[(str, list[str])] = [],\n    platform_resources: list[(str, list[str] | dict[str, str])] = [],\n    platform_srcs: list[(str, list[str] | dict[str, str])] = [],\n    py_version_for_type_checking: None | str = None,\n    resources: list[str] | dict[str, str] = [],\n    shard_typing: None | bool = None,\n    srcs: list[str] | dict[str, str] = [],\n    type_stubs: list[str] | dict[str, str] = [],\n    typing: bool = False,\n    versioned_resources: None | list[(dict[str, str], list[str] | dict[str, str])] = None,\n    versioned_srcs: None | list[(dict[str, str], list[str] | dict[str, str])] = None,\n    zip_safe: None | bool = None,\n) -> None\n'})}),"\n",(0,r.jsx)(n.h3,{id:"parameters",children:"Parameters"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"name"}),": (required)"]}),"\n",(0,r.jsx)(n.p,{children:"name of the target"}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"default_target_platform"}),": (defaults to: ",(0,r.jsx)(n.code,{children:"None"}),")"]}),"\n",(0,r.jsx)(n.p,{children:"specifies the default target platform, used when no platforms are specified on the command line"}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"target_compatible_with"}),": (defaults to: ",(0,r.jsx)(n.code,{children:"[]"}),")"]}),"\n",(0,r.jsx)(n.p,{children:"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"compatible_with"}),": (defaults to: ",(0,r.jsx)(n.code,{children:"[]"}),")"]}),"\n",(0,r.jsx)(n.p,{children:"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"exec_compatible_with"}),": (defaults to: ",(0,r.jsx)(n.code,{children:"[]"}),")"]}),"\n",(0,r.jsx)(n.p,{children:"a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"visibility"}),": (defaults to: ",(0,r.jsx)(n.code,{children:"[]"}),")"]}),"\n",(0,r.jsx)(n.p,{children:"a list of visibility patterns restricting what targets can depend on this one"}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"within_view"}),": (defaults to: ",(0,r.jsx)(n.code,{children:'["PUBLIC"]'}),")"]}),"\n",(0,r.jsx)(n.p,{children:"a list of visibility patterns restricting what this target can depend on"}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"metadata"}),": (defaults to: ",(0,r.jsx)(n.code,{children:"{}"}),")"]}),"\n",(0,r.jsx)(n.p,{children:"a key-value map of metadata associated with this target"}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"tests"}),": (defaults to: ",(0,r.jsx)(n.code,{children:"[]"}),")"]}),"\n",(0,r.jsx)(n.p,{children:"a list of targets that provide tests for this one"}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"modifiers"}),": (defaults to: ",(0,r.jsx)(n.code,{children:"[]"}),")"]}),"\n",(0,r.jsx)(n.p,{children:"an array of modifiers associated with this target"}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"base_module"}),": (defaults to: ",(0,r.jsx)(n.code,{children:"None"}),")"]}),"\n",(0,r.jsx)(n.p,{children:"The package in which the specified source files and resources should reside in their final location in the top-level binary. If unset, Buck uses the project-relative directory that contains the BUCK file."}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"deps"}),": (defaults to: ",(0,r.jsx)(n.code,{children:"[]"}),")"]}),"\n",(0,r.jsxs)(n.p,{children:["A list of ",(0,r.jsx)(n.code,{children:"python_library()"})," rules that specify Python modules to include in the binary \u2014 including all transitive dependencies of these rules."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"exclude_deps_from_merged_linking"}),": (defaults to: ",(0,r.jsx)(n.code,{children:"False"}),")"]}),"\n",(0,r.jsxs)(n.p,{children:["When linking the top-level binary with a ",(0,r.jsx)(n.code,{children:"merged"})," ",(0,r.jsx)(n.code,{children:".buckconfig"}),", do not merge or re-link any native transitive deps of this library. This is useful if this library wraps prebuilt native extensions which cannot be re-linked as part of library merging."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"labels"}),": (defaults to: ",(0,r.jsx)(n.code,{children:"[]"}),")"]}),"\n",(0,r.jsxs)(n.p,{children:["Set of arbitrary strings which allow you to annotate a ",(0,r.jsx)(n.code,{children:"build rule"})," with tags that can be searched for over an entire dependency tree using ",(0,r.jsx)(n.code,{children:"buck query()"})," ."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"platform_resources"}),": (defaults to: ",(0,r.jsx)(n.code,{children:"[]"}),")"]}),"\n",(0,r.jsxs)(n.p,{children:["Python-platform-specific resource files. These should be specified as a list of pairs where the first element in each pair is an un-anchored regex against which the platform name is matched, and the second element is a list of resource files. The regex should use ",(0,r.jsx)(n.code,{children:"java.util.regex.Pattern"})," syntax. The platform name is a Python platform ",(0,r.jsx)(n.em,{children:"flavor"})," defined in the buckconfig#",(0,r.jsx)(n.code,{children:"python "}),"section of ",(0,r.jsx)(n.code,{children:".buckconfig"}),"."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"platform_srcs"}),": (defaults to: ",(0,r.jsx)(n.code,{children:"[]"}),")"]}),"\n",(0,r.jsxs)(n.p,{children:["Python-platform-specific source files. These should be specified as a list of pairs where the first element in each pair is an un-anchored regex against which the platform name is matched, and the second element is a list of source files. The regex should use ",(0,r.jsx)(n.code,{children:"java.util.regex.Pattern"})," syntax. The platform name is a Python platform ",(0,r.jsx)(n.em,{children:"flavor"})," defined in the buckconfig#",(0,r.jsx)(n.code,{children:"python"})," section of ",(0,r.jsx)(n.code,{children:".buckconfig"}),"."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"py_version_for_type_checking"}),": (defaults to: ",(0,r.jsx)(n.code,{children:"None"}),")"]}),"\n",(0,r.jsx)(n.p,{children:"This option will force the type checker to perform checking under a specific version of Python interpreter."}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"shard_typing"}),": (defaults to: ",(0,r.jsx)(n.code,{children:"None"}),")"]}),"\n",(0,r.jsx)(n.p,{children:"Determines if sharding should be enabled on a given target."}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"srcs"}),": (defaults to: ",(0,r.jsx)(n.code,{children:"[]"}),")"]}),"\n",(0,r.jsxs)(n.p,{children:["The set of Python (",(0,r.jsx)(n.code,{children:".py"}),") files to include in this library."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"typing"}),": (defaults to: ",(0,r.jsx)(n.code,{children:"False"}),")"]}),"\n",(0,r.jsx)(n.p,{children:"Determines whether to perform type checking on the given target. Default is False."}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"examples",children:"Examples"}),"\n",(0,r.jsx)(n.p,{children:"Include Python source files and resource files."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"\n\n# BUCK\n\n# A rule that includes a single Python file.\npython_library(\n  name = 'fileutil',\n  srcs = ['fileutil.py'],\n  deps = [\n    '//third_party/python-magic:python-magic',\n  ],\n)\n\n# A rule that uses glob() to include all Python source files in the\n# directory in which the rule is defined. The rule also specifies a\n# resource file that gets packaged with the source file.\npython_library(\n  name = 'testutil',\n  srcs = glob(['testutil/**/*.py']),\n  resources = [\n    'testdata.dat',\n  ],\n)\n\n\n"})})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}}}]);